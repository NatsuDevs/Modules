local Players = game:GetService("Players") -- noobs
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local GuiService = game:GetService("GuiService")

local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local Camera = workspace.CurrentCamera
local sc = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)

local Down = false
local Inset = GuiService:GetGuiInset()

--// Options \\--
getgenv().Options = {
    Enabled = true,
    TeamCheck = true,
    Triggerbot = false,
    Smoothness = true,
    AimPart = "Head",
    FOV = 150,
    Mousebind = Enum.UserInputType.MouseButton2,
    Delay = 0,
    ShowFOV = false,
    RainbowFOV = false
}

--// Functions \\--
local gc = function()
	local nearest = math.huge
	local nearplr
	for i, v in pairs(game:GetService("Players"):GetPlayers()) do
		if v ~= game:GetService("Players").LocalPlayer and v.Character and v.Character:FindFirstChild(Options.AimPart) then
			if Options.TeamCheck then
				if game:GetService("Players").LocalPlayer.Team ~= v.Team then
                    local pos = Camera:WorldToScreenPoint(v.Character[Options.AimPart].Position)
                    local diff = math.sqrt((pos.X - sc.X) ^ 2 + (pos.Y + Inset.Y - sc.Y) ^ 2)
                    if diff < nearest and diff < Options.FOV then
                        nearest = diff
                        nearplr = v
                    end
                end
			else
				local pos = Camera:WorldToScreenPoint(v.Character[Options.AimPart].Position)
				local diff = math.sqrt((pos.X - sc.X) ^ 2 + (pos.Y + Inset.Y - sc.Y) ^ 2)
				if diff < nearest and diff < Options.FOV then
					nearest = diff
					nearplr = v
                end
			end
		end
	end
	return nearplr
end -- google chrome made this but i modified it for it to use teamcheck

function Circle()
    local circ = Drawing.new('Circle')
    circ.Transparency = 1
    circ.Thickness = 1.5
    circ.Visible = false
    circ.Color = Color3.fromRGB(255,255,255)
	circ.Filled = false
	circ.NumSides = 150
    circ.Radius = Options.FOV
    return circ
end

curc = Circle()
spawn(function()
    while task.wait() do
        if Options.RainbowFOV then
            curc.Color = Color3.fromHSV(tick()%5/5,1,1)
        end
    end
end)

getgenv().FOV_Visible = function(bool)
    curc.Visible = bool
end

--// Main \\--
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local UserInputService = game:GetService("UserInputService")

UserInputService.InputBegan:Connect(function( input )
    if Options.Mode == "Keyboard" and input.KeyCode == Options.Keybind or Options.Mode == "Mouse" and input.UserInputType == Options.Mousebind then
        Down = true
        spawn(function()
            while Down do wait()
                if Mouse.Target and Players:FindFirstChild(Mouse.Target.Parent.Name) then
                    local HitPlayer = Players:FindFirstChild(Mouse.Target.Parent.Name)
                    if HitPlayer.Team ~= LocalPlayer.Team or not getgenv().Options.TeamCheck then
                        if getgenv().Options.Delay > 0 then wait(getgenv().Options.Delay) end
                        mouse1press(); wait(); mouse1release()
                    end
                end
                if not getgenv().Options.Triggerbot then break end
            end
        end)
	end
end)

UserInputService.InputEnded:Connect(function( input )
    if Options.Mode == "Keyboard" and input.KeyCode == Options.Keybind or Options.Mode == "Mouse" and input.UserInputType == Options.Mousebind then
        Down = false
    end
end)

RunService.RenderStepped:Connect(function( ... )
    if Options.Enabled then
        if Down then
            if gc() ~= nil and gc().Character:FindFirstChild(Options.AimPart) then
                if Options.Smoothness then
                    pcall(function( ... )
                        local Info = TweenInfo.new(0.05,Enum.EasingStyle.Linear,Enum.EasingDirection.Out)
                        game:GetService("TweenService"):Create(Camera,Info,{
                            CFrame = CFrame.new(Camera.CFrame.p,gc().Character[Options.AimPart].CFrame.p)
                        }):Play()
                    end)
                else
                    pcall(function()
                        Camera.CFrame = CFrame.new(Camera.CFrame.p,gc().Character[Options.AimPart].CFrame.p)
                    end)
                end
            end
        end
        curc.Visible = true
        curc.Position = Vector2.new(Mouse.X, Mouse.Y+Inset.Y)
        curc.Radius = Options.FOV
    else
        -- do nothing except remove the fov
        curc.Visible = false
    end
end)
